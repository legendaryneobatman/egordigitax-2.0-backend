services:
  db:
    image: postgres:latest
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${SHARED_DB_USER}
      POSTGRES_PASSWORD: ${SHARED_DB_PASSWORD}
    ports:
      - "${SHARED_DB_PORT}:5432"
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      app-network:
    volumes:
      - postgres_data:/var/lib/postgresql/data

  catalogue:
    build:
      context: .
      dockerfile: apps/catalogue/Dockerfile
      args:
        - PORT=${SERVICE_CATALOGUE_TCP_PORT}
    entrypoint: ["./cli/startup-with-migrate.sh"]
    environment:
      APP_NAME: catalogue
      DATABASE_URL: ${SERVICE_CATALOGUE_DATABASE_URL}
    networks:
      app-network:
        aliases:
          - ${SERVICE_CATALOGUE_NAMESPACE}
    depends_on:
      db:
        condition: service_healthy
      shared-deps:
        condition: service_started

  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile
      args:
        - PORT=${SERVICE_API_GATEWAY_HTTP_PORT}
    networks:
      - app-network
    ports:
      - "${SERVICE_API_GATEWAY_HTTP_PORT}:${SERVICE_API_GATEWAY_HTTP_PORT}"
    depends_on:
      - shared-deps
      - catalogue

  shared-deps:
    build:
      context: .
      target: base
    image: edigitax-base
    command: echo "Base image built"
    depends_on:
      - db

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
